---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: metabases.unagex.com
spec:
  group: unagex.com
  names:
    kind: Metabase
    listKind: MetabaseList
    plural: metabases
    singular: metabase
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Metabase is the Schema for the metabases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetabaseSpec defines the desired state of Metabase
            properties:
              db:
                properties:
                  image:
                    default: postgres:latest
                    description: The image name to use for PostgreSQL containers.
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: ImagePullPolicy is used to determine when Kubernetes
                      will attempt to pull (download) container images.
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  replicas:
                    default: 1
                    description: Number of desired PostgreSQL pods.
                    format: int32
                    minimum: 1
                    type: integer
                  resources:
                    default:
                      limits:
                        cpu: "1"
                        memory: 2Gi
                      requests:
                        cpu: 100m
                        memory: 256Mi
                    description: Resources of the PostgreSQL container.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  volume:
                    properties:
                      size:
                        description: Size of the volume.
                        pattern: ^\d+(Ki|Mi|Gi|Ti|Pi|Ei|m|k|M|G|T|P|E)$
                        type: string
                      storageClassName:
                        description: StorageClassName defined for the volume.
                        type: string
                    required:
                    - size
                    type: object
                required:
                - volume
                type: object
              metabase:
                properties:
                  image:
                    default: metabase/metabase:latest
                    description: The image name to use for Metabase container.
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: ImagePullPolicy is used to determine when Kubernetes
                      will attempt to pull (download) container images.
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  resources:
                    default:
                      limits:
                        cpu: "1"
                        memory: 2Gi
                      requests:
                        cpu: "1"
                        memory: 2Gi
                    description: Resources of the metabase container.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
            required:
            - db
            - metabase
            type: object
          status:
            description: MetabaseStatus defines the observed state of Metabase
            properties:
              host:
                description: Host to connect to the database.
                type: string
              ready:
                description: Instance ready to accept connections.
                type: boolean
            required:
            - ready
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
